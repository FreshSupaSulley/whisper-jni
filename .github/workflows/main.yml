name: Build Whisper JNI
on:
  workflow_dispatch:
jobs:
  download-models:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Download tiny ggml model
      run: |
        git submodule update --init
        ./download-test-model.sh
        ./download-vad-model.sh
      uses: actions/upload-artifact@v4
      with:
        name: tiny-ggml-model
        path: ggml-tiny.bin
        retention-days: 2
    - name: Upload silero model
      uses: actions/upload-artifact@v4
      with:
        name: silero-ggml-model
        path: ggml-silero-v5.1.2.bin
        retention-days: 2

  build-lib-linux-x64:
    needs: [download-models]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - uses: docker/setup-buildx-action@v3
        with:
          install: true
      - uses: actions/setup-java@v4
        with:
          java-version: 22
          distribution: 'temurin'
      - name: Setup project dir
        run: |
          mv ./tiny-ggml-model/ggml-tiny.bin ./ggml-tiny.bin
          mv ./silero-ggml-model/ggml-silero-v5.1.2.bin ./src/main/resources
          mkdir -p dist
      - name: Build native library
        run: |
          docker build -f dockerfile . -t whisperjni_binary:x64 --load
          docker run --platform=amd64 -v $(pwd)/dist:/out whisperjni_binary:x64 bash -c "cp src/main/resources/linux-x64/* /out/"
      - name: Test
        run: ./gradlew test
      - name: Artifact linux x64
        uses: actions/upload-artifact@v4
        with:
          name: linux-binary-x64
          path: dist/*

  build-lib-linux-aarch64:
    needs: [download-models]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
        with:
          install: true
      - uses: actions/setup-java@v4
        with:
          java-version: 22
          distribution: 'temurin'
      - name: Setup project dir
        run: |
          mv ./tiny-ggml-model/ggml-tiny.bin ./ggml-tiny.bin
          mv ./silero-ggml-model/ggml-silero-v5.1.2.bin ./src/main/resources
          mkdir -p dist
      - name: Build native library
        run: |
          docker build -f dockerfile . -t whisperjni_binary:aarch64 --platform arm64 --load
          DOCKER_BUILDKIT=1 docker run --platform=arm64 -v $(pwd)/dist:/out whisperjni_binary:aarch64 bash -c "cp src/main/resources/linux-aarch64/* /out/"
      - name: Test
        run: ./gradlew test
      - name: Artifact linux aarch64
        uses: actions/upload-artifact@v4
        with:
          name: linux-binary-aarch64
          path: dist/*

  build-lib-windows-x64:
    needs: [download-models]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 22
          distribution: 'temurin'
      - name: Setup project dir
        run: |
          git submodule update --init
          mv ./tiny-ggml-model/ggml-tiny.bin ./ggml-tiny.bin
          mv ./silero-ggml-model/ggml-silero-v5.1.2.bin ./src/main/resources
      - name: Build native library
        shell: powershell
        run: .\build_win.ps1
      - name: Test
        run: ./gradlew test
      - name: Artifact windows x64
        uses: actions/upload-artifact@v4
        with:
          name: windows-binary-x64
          path: src/main/resources/windows-x64/*.dll
  
  build-lib-windows-vulkan:
    needs: [download-models]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 22
          distribution: 'temurin'
      # Also install Vulkan
      - name: Install Vulkan SDK
        uses: humbletim/install-vulkan-sdk@v1.2
        with:
          version: 1.4.309.0
          cache: true
      - name: Setup project dir
        run: |
          git submodule update --init
          mv ./tiny-ggml-model/ggml-tiny.bin ./ggml-tiny.bin
          mv ./silero-ggml-model/ggml-silero-v5.1.2.bin ./src/main/resources
      - name: Build
        run: .\build_win_vulkan.ps1
        shell: powershell
      - name: Test
        run: ./gradlew test
      - name: Upload Vulkan DLL artifact
        uses: actions/upload-artifact@v4
        with:
          name: whisper-jni-vulkan
          path: src/main/resources/windows-x64-vulkan/*.dll

  build-lib-mac-x64:
    needs: [download-models]
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 22
          distribution: 'temurin'
      - name: Setup project dir
        run: |
          export DYLD_LIBRARY_PATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/
          git submodule update --init
          mv ./tiny-ggml-model/ggml-tiny.bin ./ggml-tiny.bin
          mv ./silero-ggml-model/ggml-silero-v5.1.2.bin ./src/main/resources
      - name: Build binary
        run: |
          export DYLD_LIBRARY_PATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/
          ./build_macos.sh x86-64
        # Apparently gradlew isn't executable by default
      - name: Test
        run: |
          chmod +x ./gradlew
          ./gradlew test
      - name: Artifact macos x64
        uses: actions/upload-artifact@v4
        with:
          name: mac-binary-x64
          path: src/main/resources/mac-x64/*.dylib
  
  build-lib-mac-aarch64:
    needs: [download-models]
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 22
          distribution: 'temurin'
      - name: Setup project dir
        run: |
          export DYLD_LIBRARY_PATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/
          git submodule update --init
          mv ./tiny-ggml-model/ggml-tiny.bin ./ggml-tiny.bin
          mv ./silero-ggml-model/ggml-silero-v5.1.2.bin ./src/main/resources
      - name: Build binary
        run: |
          export DYLD_LIBRARY_PATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/
          ./build_macos.sh aarch64
      - name: Test
        run: |
          chmod +x ./gradlew
          ./gradlew test
      - name: Artifact macos aarch64
        uses: actions/upload-artifact@v4
        with:
          name: mac-binary-aarch64
          path: src/main/resources/mac-aarch64/*.dylib

  publish:
    runs-on: ubuntu-latest
    needs: [build-lib-linux-x64, build-lib-linux-aarch64, build-lib-windows-x64, build-lib-windows-vulkan, build-lib-mac-x64, build-lib-mac-aarch64]
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
    - name: check tree
      run: ls -R
    - name: setup resources
      run: |
        mv ./silero-ggml-model/ggml-silero-v5.1.2.bin ./src/main/resources
        mv ./linux-binary-x64/*.so ./src/main/resources/linux-x64/
        mv ./linux-binary-aarch64/*.so ./src/main/resources/linux-aarch64/
        mv ./windows-binary-x64/*.dll ./src/main/resources/windows-x64/
        mv ./whisper-jni-vulkan/*.dll ./src/main/resources/windows-x64-vulkan/
        mv ./mac-binary-x64/*.dylib ./src/main/resources/mac-x64/
        mv ./mac-binary-aarch64/*.dylib ./src/main/resources/mac-aarch64/
    - name: Set up Maven Central Repository
      uses: actions/setup-java@v4
      with:
        java-version: 22
        distribution: 'temurin'
        server-id: sonatype-nexus-staging
        server-username: MAVEN_USERNAME
        server-password: MAVEN_CENTRAL_TOKEN
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
        gpg-passphrase: MAVEN_GPG_PASSPHRASE
    - name: Deploy with Maven
      id: deploy
      run: |
        ./gradlew build
    # I hope no one can see this
    - name: Upload JAR as private artifact
      uses: actions/upload-artifact@v4
      with:
        name: Whisper JNI
        path: build/libs/*.jar
